// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  password  String
  role      Role     @default(ASSISTANT)
  createdAt DateTime @default(now())
}

enum Role {
  OWNER
  MANAGER
  ASSISTANT
}

model TimeSlot {
  id            Int          @id @default(autoincrement())
  date          DateTime
  time          String
  isBooked      Boolean      @default(false)
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  appointment   Appointment? @relation(fields: [appointmentId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  appointmentId Int? //this is the foreign key to Appointment
}

model Appointment {
  id             Int        @id @default(autoincrement())
  firstName      String
  lastName       String?
  email          String     @unique
  phoneNumber    String
  eventDate      DateTime
  primaryVenue   String?
  secondaryVenue String?
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  timeSlot       TimeSlot[] // One-to-One relationship
  timeSlotId     Int? //foreign key to TimeSlot
}
